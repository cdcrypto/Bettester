app Blog {
  wasp: {
    version: "^0.11.1"
  },
  title: "Blog",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    wallet   Wallet @relation(fields: [walletId], references: [id])
    bets     Bet[]
    walletId Int
psl=}

entity Wallet {=psl
    id      Int    @id @default(autoincrement())
    address String @unique
    balance Float
    User    User[]
psl=}

entity Bet {=psl
    id         Int    @id @default(autoincrement())
    amount     Float
    leverage   Int
    entryPrice Float
    bustPrice  Float
    profitLoss Float
    status     String
    asset      String
    user       User   @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action createBet {
  fn: import { createBet } from "@server/actions.js",
  entities: [User, Wallet, Bet]
}

action closeBet {
  fn: import { closeBet } from "@server/actions.js",
  entities: [User, Wallet, Bet]
}

action depositFunds {
  fn: import { depositFunds } from "@server/actions.js",
  entities: [User, Wallet]
}

action withdrawFunds {
  fn: import { withdrawFunds } from "@server/actions.js",
  entities: [User, Wallet]
}

query getUserBets {
  fn: import { getUserBets } from "@server/queries.js",
  entities: [User, Bet]
}

query getUserWallet {
  fn: import { getUserWallet } from "@server/queries.js",
  entities: [Wallet]
}

query getCurrentAssetPrice {
  fn: import { getCurrentAssetPrice } from "@server/queries.js",
  entities: [Wallet]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/HomePage.jsx",
  authRequired: true
}

route WalletRoute { path: "/wallet", to: WalletPage }
page WalletPage {
  component: import { WalletPage } from "@client/pages/WalletPage.jsx",
  authRequired: true
}

route CashierRoute { path: "/cashier", to: CashierPage }
page CashierPage {
  component: import { CashierPage } from "@client/pages/CashierPage.jsx",
  authRequired: true
}
